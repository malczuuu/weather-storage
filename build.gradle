import com.diffplug.spotless.LineEnding

plugins {
    id("java")
    id("org.springframework.boot") version "3.5.5"
    id("io.spring.dependency-management") version "1.1.7"
    id("com.diffplug.spotless") version "7.2.1"
}

group = "io.github.malczuuu"

/**
 * Conditional approach to versioning. If `-Pversion=...` is specified on the command line, it will be used as the
 * version. Otherwise, the version is derived from the git tag and build number.
 */
if (version == null || version == "unspecified") {
    version = Versioning.getSnapshotVersion(rootProject.rootDir)
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-webflux")
    implementation("org.springframework.boot:spring-boot-starter-data-mongodb-reactive")

    testImplementation("org.springframework.boot:spring-boot-starter-test")

    testImplementation("org.springframework.boot:spring-boot-testcontainers")

    testImplementation("io.projectreactor:reactor-test")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:mongodb")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    testImplementation("org.wiremock.integrations.testcontainers:wiremock-testcontainers-module:1.0-alpha-15")
    testImplementation("org.wiremock:wiremock:3.13.1")

    compileOnly("org.projectlombok:lombok:1.18.38")
    annotationProcessor("org.projectlombok:lombok:1.18.38")
}

spotless {
    format "misc", {
        target "*.gradle", ".gitattributes", ".gitignore"

        trimTrailingWhitespace()
        leadingTabsToSpaces(4)
        endWithNewline()
    }

    format "yaml", {
        target "**/*.yml", "**/*.yaml"

        trimTrailingWhitespace()
        leadingTabsToSpaces(2)
        endWithNewline()
    }

    java {
        target "src/**/*.java"

        googleJavaFormat("1.28.0")
        lineEndings = LineEnding.UNIX
    }
}

tasks.register("printVersion") {
    doLast {
        println "Project version: ${version}"
    }
}

/**
 * There's no need for a plain JAR.
 */
tasks.named("jar") {
    setEnabled(false)
}

tasks.named("test") {
    useJUnitPlatform()
}
